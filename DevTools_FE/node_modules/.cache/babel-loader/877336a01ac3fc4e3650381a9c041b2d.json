{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\Cerberus.js\";\nimport React from 'react';\nimport LoginCerberus from './login';\nimport HomeCerberus from './home';\nimport { Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\n\nconst Cerberus = () => {\n  let match = useRouteMatch();\n  const auth = {\n    isAuthenticated: false,\n\n    authenticate(cb) {\n      auth.isAuthenticated = true;\n      setTimeout(cb, 100); // fake async\n    },\n\n    signout(cb) {\n      auth.isAuthenticated = false;\n      setTimeout(cb, 100);\n    }\n\n  };\n\n  const ProtectedRoute = (_ref) => {\n    let children = _ref.children,\n        rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: ({\n        location\n      }) => auth.isAuthenticated ? children : React.createElement(Redirect, {\n        to: {\n          pathname: `${match.url}/login`,\n          state: {\n            from: location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Cerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${match.path}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, auth.isAuthenticated ? React.createElement(Redirect, {\n    to: `${match.url}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(LoginCerberus, {\n    auth: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(ProtectedRoute, {\n    path: `${match.path}/`,\n    exact: true,\n    component: HomeCerberus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n};\n\nexport default Cerberus;","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/Cerberus.js"],"names":["React","LoginCerberus","HomeCerberus","Route","useRouteMatch","Switch","Redirect","Cerberus","match","auth","isAuthenticated","authenticate","cb","setTimeout","signout","ProtectedRoute","children","rest","location","pathname","url","state","from","path"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAsD,kBAAtD;;AAGA,MAAMC,QAAQ,GAAG,MAAK;AACpB,MAAIC,KAAK,GAAGJ,aAAa,EAAzB;AACA,QAAMK,IAAI,GAAG;AACXC,IAAAA,eAAe,EAAE,KADN;;AAEXC,IAAAA,YAAY,CAACC,EAAD,EAAK;AACfH,MAAAA,IAAI,CAACC,eAAL,GAAuB,IAAvB;AACAG,MAAAA,UAAU,CAACD,EAAD,EAAK,GAAL,CAAV,CAFe,CAEM;AACtB,KALU;;AAMXE,IAAAA,OAAO,CAACF,EAAD,EAAK;AACVH,MAAAA,IAAI,CAACC,eAAL,GAAuB,KAAvB;AACAG,MAAAA,UAAU,CAACD,EAAD,EAAK,GAAL,CAAV;AACD;;AATU,GAAb;;AAWA,QAAMG,cAAc,GAAG,UAAyB;AAAA,QAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,QAAVC,IAAU;;AAC9C,WACE,oBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KACNT,IAAI,CAACC,eAAL,GACEM,QADF,GAGE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFG,UAAAA,QAAQ,EAAG,GAAEX,KAAK,CAACY,GAAI,QADrB;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ;AAAR;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAiBD,GAlBD;;AAoBA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEV,KAAK,CAACe,IAAK,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,IAAI,CAACC,eAAL,GAAuB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEF,KAAK,CAACY,GAAI,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,GAA0D,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEX,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9D,CADF,EAME,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAG,GAAED,KAAK,CAACe,IAAK,GAApC;AAAwC,IAAA,KAAK,MAA7C;AAA8C,IAAA,SAAS,EAAErB,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,CADF;AAiBD,CAlDD;;AAoDA,eAAeK,QAAf","sourcesContent":["import React from 'react';\r\nimport LoginCerberus from './login';\r\nimport HomeCerberus from './home';\r\nimport { Route, useRouteMatch, Switch, Redirect} from 'react-router-dom';\r\n\r\n\r\nconst Cerberus = () =>{  \r\n  let match = useRouteMatch();\r\n  const auth = {\r\n    isAuthenticated: false,\r\n    authenticate(cb) {\r\n      auth.isAuthenticated = true;\r\n      setTimeout(cb, 100); // fake async\r\n    },\r\n    signout(cb) {\r\n      auth.isAuthenticated = false;\r\n      setTimeout(cb, 100);\r\n    }\r\n  };\r\n  const ProtectedRoute = ({children, ...rest}) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          auth.isAuthenticated ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: `${match.url}/login`,\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={false}>\r\n      <div className=\"Cerberus\">\r\n        <Switch>\r\n          <Route path={`${match.path}/login`}>\r\n            {\r\n              auth.isAuthenticated ? <Redirect to={`${match.url}/`}/> : <LoginCerberus auth={auth}></LoginCerberus>\r\n            }\r\n          </Route>\r\n          <ProtectedRoute path={`${match.path}/`} exact component={HomeCerberus}/>\r\n          {/* <Route path={`${match.path}/`} exact>\r\n            auth.isAuthenticated ?  <HomeCerberus></HomeCerberus>: <Redirect to={`${match.url}/`}/>\r\n          </Route> */}\r\n        </Switch>\r\n      </div>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Cerberus;\r\n"]},"metadata":{},"sourceType":"module"}