{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\Cerberus.js\";\nimport React from 'react';\nimport LoginCerberus from './login';\nimport HomeCerberus from './home';\nimport { Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\n\nconst Cerberus = () => {\n  let match = useRouteMatch();\n  const auth = {\n    isAuthenticated: false,\n    user: \"\",\n\n    authenticate(cb) {\n      auth.isAuthenticated = true;\n      setTimeout(cb, 100);\n    },\n\n    signout(cb) {\n      auth.isAuthenticated = false;\n      setTimeout(cb, 100);\n    }\n\n  };\n\n  const ProtectedRoute = (_ref) => {\n    let children = _ref.children,\n        rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: ({\n        location\n      }) => fakeAuth.isAuthenticated ? children : React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  };\n\n  const authSuccess = event => {\n    auth.authenticate();\n    console.log(auth.isAuthenticated);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${match.path}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, auth.isAuthenticated ? React.createElement(Redirect, {\n    to: `${match.url}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : React.createElement(LoginCerberus, {\n    success: authSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/`,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"auth.isAuthenticated ?  \", React.createElement(HomeCerberus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \": \", React.createElement(Redirect, {\n    to: `${match.url}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n};\n\nexport default Cerberus;","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/Cerberus.js"],"names":["React","LoginCerberus","HomeCerberus","Route","useRouteMatch","Switch","Redirect","Cerberus","match","auth","isAuthenticated","user","authenticate","cb","setTimeout","signout","ProtectedRoute","children","rest","location","fakeAuth","pathname","state","from","authSuccess","event","console","log","path","url"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;;AAGA,MAAMC,QAAQ,GAAG,MAAK;AACpB,MAAIC,KAAK,GAAGJ,aAAa,EAAzB;AACA,QAAMK,IAAI,GAAG;AACXC,IAAAA,eAAe,EAAE,KADN;AAEXC,IAAAA,IAAI,EAAE,EAFK;;AAGXC,IAAAA,YAAY,CAACC,EAAD,EAAI;AACdJ,MAAAA,IAAI,CAACC,eAAL,GAAuB,IAAvB;AACAI,MAAAA,UAAU,CAACD,EAAD,EAAI,GAAJ,CAAV;AACD,KANU;;AAOXE,IAAAA,OAAO,CAACF,EAAD,EAAI;AACTJ,MAAAA,IAAI,CAACC,eAAL,GAAuB,KAAvB;AACAI,MAAAA,UAAU,CAACD,EAAD,EAAI,GAAJ,CAAV;AACD;;AAVU,GAAb;;AAaA,QAAMG,cAAc,GAAG,UAAyB;AAAA,QAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,QAAVC,IAAU;;AAC9C,WACE,oBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KACNC,QAAQ,CAACV,eAAT,GACEO,QADF,GAGE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFI,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ;AAAR;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAiBD,GAlBD;;AAmBA,QAAMK,WAAW,GAAGC,KAAK,IAAI;AAC3BhB,IAAAA,IAAI,CAACG,YAAL;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,CAACC,eAAjB;AACD,GAHD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACoB,IAAK,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEInB,IAAI,CAACC,eAAL,GAAuB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEF,KAAK,CAACqB,GAAI,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,GAA0D,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEL,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9D,CADF,EAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEhB,KAAK,CAACoB,IAAK,GAA3B;AAA+B,IAAA,KAAK,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC0B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1B,QACyD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEpB,KAAK,CAACqB,GAAI,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzD,CAPF,CADF,CADF;AAeD,CArDD;;AAuDA,eAAetB,QAAf","sourcesContent":["import React from 'react';\r\nimport LoginCerberus from './login';\r\nimport HomeCerberus from './home';\r\nimport { Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Cerberus = () =>{  \r\n  let match = useRouteMatch();\r\n  const auth = {\r\n    isAuthenticated: false,\r\n    user: \"\",\r\n    authenticate(cb){\r\n      auth.isAuthenticated = true;\r\n      setTimeout(cb,100);\r\n    },\r\n    signout(cb){\r\n      auth.isAuthenticated = false;\r\n      setTimeout(cb,100);\r\n    }\r\n  };\r\n\r\n  const ProtectedRoute = ({children, ...rest}) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          fakeAuth.isAuthenticated ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  const authSuccess = event => {\r\n    auth.authenticate();\r\n    console.log(auth.isAuthenticated);\r\n  } \r\n  return (\r\n    <div className=\"Cerberus\">\r\n      <Switch>\r\n        <Route path={`${match.path}/login`}>\r\n          {\r\n            auth.isAuthenticated ? <Redirect to={`${match.url}/`}/> : <LoginCerberus success={authSuccess}></LoginCerberus>\r\n          }\r\n        </Route>\r\n        {/* <ProtectedRoute path={`${match.path}/`} exact component={HomeCerberus}/> */}\r\n        <Route path={`${match.path}/`} exact>\r\n          auth.isAuthenticated ?  <HomeCerberus></HomeCerberus>: <Redirect to={`${match.url}/`}/>\r\n        </Route>\r\n      </Switch>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Cerberus;\r\n"]},"metadata":{},"sourceType":"module"}