{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n// import './App.css';\n\nimport Topnav from './components/shared/topnav';\nimport Sidebar from './components/shared/sidebar';\nimport TestsetList from './components/testcase/testsetList';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showMenu: false,\n      sidebar_items: [{\n        main: 'Documentations',\n        subs: [{\n          name: 'Requirements',\n          link: '/cerberus/documentation/requirements'\n        }, {\n          name: 'Test Plans',\n          link: '/cerberus/documentation/testplans'\n        }, {\n          name: 'Requirements',\n          link: '/cerberus/documentation/requirements'\n        }]\n      }]\n    };\n\n    this.toggleMenu = () => {\n      let currentStatus = this.state.showMenu;\n      this.setState({\n        showMenu: !currentStatus\n      });\n    };\n  }\n\n  render() {\n    let menu = null;\n\n    if (this.state.showMenu) {\n      menu = React.createElement(TestsetList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Topnav, {\n      username: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      logo: \"\",\n      items: this.state.sidebar_items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), menu);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/App.js"],"names":["React","Component","Topnav","Sidebar","TestsetList","App","state","showMenu","sidebar_items","main","subs","name","link","toggleMenu","currentStatus","setState","render","menu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,aAAa,EAAE,CACb;AACEC,QAAAA,IAAI,EAAE,gBADR;AAEEC,QAAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,IAAI,EAAE,cADR;AAEEC,UAAAA,IAAI,EAAE;AAFR,SADI,EAKJ;AACED,UAAAA,IAAI,EAAE,YADR;AAEEC,UAAAA,IAAI,EAAE;AAFR,SALI,EASJ;AACED,UAAAA,IAAI,EAAE,cADR;AAEEC,UAAAA,IAAI,EAAE;AAFR,SATI;AAFR,OADa;AAFT,KADkB;;AAAA,SAyB1BC,UAzB0B,GAyBb,MAAM;AACjB,UAAIC,aAAa,GAAG,KAAKR,KAAL,CAAWC,QAA/B;AACA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAE,CAACO;AAAZ,OAAd;AACD,KA5ByB;AAAA;;AA8B1BE,EAAAA,MAAM,GAAE;AAEN,QAAIC,IAAI,GAAG,IAAX;;AAEA,QAAI,KAAKX,KAAL,CAAWC,QAAf,EAAwB;AACtBU,MAAAA,IAAI,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,EAAd;AAAiB,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWE,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGS,IAHH,CADA;AAMG;;AA3CqB;;AA8C5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport Topnav from './components/shared/topnav';\nimport Sidebar from './components/shared/sidebar';\nimport TestsetList from './components/testcase/testsetList';\n\nclass App extends Component {\n  state = {\n    showMenu: false,\n    sidebar_items: [\n      {\n        main: 'Documentations',\n        subs: [\n          {\n            name: 'Requirements',\n            link: '/cerberus/documentation/requirements'\n          },\n          {\n            name: 'Test Plans',\n            link: '/cerberus/documentation/testplans'\n          },\n          {\n            name: 'Requirements',\n            link: '/cerberus/documentation/requirements'\n          },\n\n        ]\n      }\n    ]\n  };\n\n  toggleMenu = () => {\n    let currentStatus = this.state.showMenu\n    this.setState({showMenu: !currentStatus});\n  }\n  \n  render(){\n    \n    let menu = null;\n\n    if (this.state.showMenu){\n      menu = <TestsetList/>\n    }\n    return (\n    <div className=\"App\">\n      <Topnav username=\"admin\"/>\n      <Sidebar logo=\"\" items={this.state.sidebar_items}/>\n      {menu}\n    </div> \n    );}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}