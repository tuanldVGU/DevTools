{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\Cerberus.js\";\nimport React from 'react';\nimport LoginCerberus from './login';\nimport HomeCerberus from './home';\nimport { Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst Cerberus = () => {\n  let match = useRouteMatch();\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        auth = _useState2[0],\n        setAuth = _useState2[1];\n\n  setAuth({\n    isAuthenticated: false\n  });\n\n  const successAuth = event => {\n    setAuth({\n      isAuthenticated: true\n    });\n    console.log(auth.isAuthenticated);\n  };\n\n  const ProtectedRoute = (_ref) => {\n    let children = _ref.children,\n        rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n    console.log(auth.isAuthenticated);\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: () => auth.isAuthenticated ? children : React.createElement(Redirect, {\n        to: `${match.url}login`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${match.path}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, auth.isAuthenticated ? React.createElement(Redirect, {\n    to: `${match.url}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : React.createElement(LoginCerberus, {\n    success: successAuth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(ProtectedRoute, {\n    path: `${match.path}/`,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(HomeCerberus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nexport default Cerberus;","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/Cerberus.js"],"names":["React","LoginCerberus","HomeCerberus","Route","useRouteMatch","Switch","Redirect","useState","Cerberus","match","auth","setAuth","isAuthenticated","successAuth","event","console","log","ProtectedRoute","children","rest","url","path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAsD,kBAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,QAAQ,GAAG,MAAK;AACpB,MAAIC,KAAK,GAAGL,aAAa,EAAzB;;AADoB,oBAGGG,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,QAGbG,IAHa;AAAA,QAGRC,OAHQ;;AAKpBA,EAAAA,OAAO,CAAC;AACNC,IAAAA,eAAe,EAAE;AADX,GAAD,CAAP;;AAIA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3BH,IAAAA,OAAO,CAAC;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAD,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,eAAjB;AACD,GAHD;;AAKA,QAAMK,cAAc,GAAG,UAAyB;AAAA,QAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,QAAVC,IAAU;;AAC9CJ,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,eAAjB;AACA,WACE,oBAAC,KAAD,oBACMO,IADN;AAEE,MAAA,MAAM,EAAE,MACNT,IAAI,CAACE,eAAL,GAAwBM,QAAxB,GACC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAG,GAAET,KAAK,CAACW,GAAI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEX,KAAK,CAACY,IAAK,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIX,IAAI,CAACE,eAAL,GAAuB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEH,KAAK,CAACW,GAAI,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,GAA0D,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEP,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9D,CADF,EAME,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAG,GAAEJ,KAAK,CAACY,IAAK,GAApC;AAAwC,IAAA,KAAK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,CADF;AAcD,CAzCD;;AA2CA,eAAeb,QAAf","sourcesContent":["import React from 'react';\r\nimport LoginCerberus from './login';\r\nimport HomeCerberus from './home';\r\nimport { Route, useRouteMatch, Switch, Redirect} from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Cerberus = () =>{  \r\n  let match = useRouteMatch();\r\n\r\n  const [auth,setAuth] = useState({});\r\n\r\n  setAuth({\r\n    isAuthenticated: false\r\n  })\r\n\r\n  const successAuth = event => {\r\n    setAuth({isAuthenticated: true});\r\n    console.log(auth.isAuthenticated);\r\n  }\r\n\r\n  const ProtectedRoute = ({children, ...rest}) => {\r\n    console.log(auth.isAuthenticated);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          auth.isAuthenticated ? (children) : \r\n          (<Redirect to={`${match.url}login`}/>)\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Cerberus\">\r\n      <Switch>\r\n        <Route path={`${match.path}/login`}>\r\n          {\r\n            auth.isAuthenticated ? <Redirect to={`${match.url}/`}/> : <LoginCerberus success={successAuth}></LoginCerberus>\r\n          }\r\n        </Route>\r\n        <ProtectedRoute path={`${match.path}/`} exact>\r\n          <HomeCerberus></HomeCerberus>\r\n        </ProtectedRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cerberus;\r\n"]},"metadata":{},"sourceType":"module"}