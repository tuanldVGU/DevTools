{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\Cerberus.js\";\nimport React from 'react';\nimport LoginCerberus from './auth/login';\nimport HomeCerberus from './pages/index';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Cerberus = props => {\n  const rootPath = \"cerberus\";\n\n  const authenticate = event => {\n    props.logIn();\n  };\n\n  const logout = event => {\n    props.logOut();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${rootPath}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.isAuthenticated ? React.createElement(Redirect, {\n    to: `${rootPath}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(LoginCerberus, {\n    success: authenticate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${rootPath}/`,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(HomeCerberus, {\n    logout: logout,\n    appRoute: rootPath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: () => dispatch({\n      type: 'CER_LOGIN'\n    }),\n    logOut: () => dispatch({\n      type: 'CER_LOGOUT'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cerberus);","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/Cerberus.js"],"names":["React","LoginCerberus","HomeCerberus","Route","Switch","Redirect","connect","Cerberus","props","rootPath","authenticate","event","logIn","logout","logOut","isAuthenticated","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAuC,kBAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AACzB,QAAMC,QAAQ,GAAE,UAAhB;;AACA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BH,IAAAA,KAAK,CAACI,KAAN;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAGF,KAAK,IAAI;AACtBH,IAAAA,KAAK,CAACM,MAAN;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEL,QAAS,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,KAAK,CAACO,eAAN,GAAwB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEN,QAAS,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,GAA0D,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9D,CADF,EAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAED,QAAS,GAAzB;AAA6B,IAAA,KAAK,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEI,MAAtB;AAA8B,IAAA,QAAQ,EAAEJ,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,CADF;AAcD,CAxBD;;AA0BA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,eAAe,EAAEE,KAAK,CAACF;AADlB,GAAP;AAGD,CAJD;;AAMA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLP,IAAAA,KAAK,EAAE,MAAMO,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CADhB;AAELN,IAAAA,MAAM,EAAE,MAAMK,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD;AAFjB,GAAP;AAID,CALD;;AAMA,eAAed,OAAO,CAACU,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CX,QAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport LoginCerberus from './auth/login';\r\nimport HomeCerberus from './pages/index';\r\nimport { Route, Switch, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Cerberus = (props) =>{  \r\n  const rootPath= \"cerberus\";\r\n  const authenticate = event => {\r\n    props.logIn();\r\n  }\r\n\r\n  const logout = event => {\r\n    props.logOut();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Cerberus\">\r\n      <Switch>\r\n        <Route path={`${rootPath}/login`}>\r\n          {\r\n            props.isAuthenticated ? <Redirect to={`${rootPath}/`}/> : <LoginCerberus success={authenticate}></LoginCerberus>\r\n          }\r\n        </Route>\r\n        <Route path={`${rootPath}/`} exact>\r\n          <HomeCerberus logout={logout} appRoute={rootPath} ></HomeCerberus>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.isAuthenticated\r\n  };\r\n} \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: () => dispatch({type: 'CER_LOGIN'}),\r\n    logOut: () => dispatch({type: 'CER_LOGOUT'})\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cerberus);\r\n"]},"metadata":{},"sourceType":"module"}