{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\pages\\\\index.js\";\nimport React from 'react';\nimport { Route, useRouteMatch, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Sidebar from '../../shared/sidebar';\nimport Topnav from '../../shared/topnav';\nimport Dashboard from './dashboard';\nimport Testsets from './Testsets';\n\nconst HomeCerberus = props => {\n  let match = useRouteMatch();\n  let data = {\n    sidebar_logo: {\n      svg: '/logo/Cerberus_logo.svg',\n      name: 'cerberus'\n    },\n    sidebar_items: [{\n      id: 'sb_m_01',\n      icon: 'fas fa-file-alt',\n      main: 'Documentation',\n      subs: [{\n        id: 'sb_s_01_01',\n        name: 'Requirement',\n        link: '/cerberus/documentation/requirements'\n      }, {\n        id: 'sb_s_01_02',\n        name: 'Test Plan',\n        link: '/cerberus/documentation/testplans'\n      }, {\n        id: 'sb_s_01_03',\n        name: 'Report',\n        link: '/cerberus/documentation/report'\n      }]\n    }, {\n      id: 'sb_m_02',\n      icon: 'fas fa-vial',\n      main: 'Tools',\n      subs: [{\n        id: 'sb_s_02_01',\n        name: 'Overview',\n        link: '/cerberus/testmanager/overview'\n      }, {\n        id: 'sb_s_02_02',\n        name: 'Test set',\n        link: '/cerberus/testsets'\n      }, {\n        id: 'sb_s_02_03',\n        name: 'Template',\n        link: '/cerberus/testmanager/tmp'\n      }, {\n        id: 'sb_s_02_04',\n        name: 'Execution',\n        link: '/cerberus/testmanager/execution'\n      }]\n    }, {\n      id: 'sb_m_03',\n      icon: 'far fa-smile',\n      main: 'User',\n      subs: [{\n        id: 'sb_s_03_01',\n        name: 'Role',\n        link: '/cerberus/user/roles'\n      }]\n    }]\n  };\n  return React.createElement(\"div\", {\n    className: \"homeCerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Topnav, {\n    username: props.activeUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    logo: data.sidebar_logo,\n    items: data.sidebar_items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${match.path}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    user: props.activeUser,\n    project: props.activeProject,\n    changeProj: props.changeProject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/testsets`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Testsets, {\n    sets: props.testsets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/hello`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Hello\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    activeUser: state.activeUser,\n    activeProject: state.activeProject,\n    testsets: state.Testsets\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeProject: name => dispatch({\n      type: 'CER_PROJ_CHANGE',\n      value: name\n    }),\n    logOut: () => dispatch({\n      type: 'CER_LOGOUT'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeCerberus);","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/pages/index.js"],"names":["React","Route","useRouteMatch","Switch","connect","Sidebar","Topnav","Dashboard","Testsets","HomeCerberus","props","match","data","sidebar_logo","svg","name","sidebar_items","id","icon","main","subs","link","activeUser","path","activeProject","changeProject","testsets","mapStateToProps","state","isAuthenticated","mapDispatchToProps","dispatch","type","value","logOut"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Route, useRouteMatch, Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Sidebar from '../../shared/sidebar';\r\nimport Topnav from '../../shared/topnav';\r\nimport Dashboard from './dashboard';\r\nimport Testsets from './Testsets';\r\n\r\nconst HomeCerberus = props => {\r\n  let match = useRouteMatch();\r\n\r\n  let data = {\r\n    sidebar_logo: {\r\n      svg: '/logo/Cerberus_logo.svg',\r\n      name: 'cerberus'\r\n    },\r\n    sidebar_items: [\r\n      {\r\n        id:'sb_m_01',\r\n        icon: 'fas fa-file-alt',\r\n        main: 'Documentation',\r\n        subs: [\r\n          {\r\n            id:'sb_s_01_01',\r\n            name: 'Requirement',\r\n            link: '/cerberus/documentation/requirements'\r\n          },\r\n          {\r\n            id:'sb_s_01_02',\r\n            name: 'Test Plan',\r\n            link: '/cerberus/documentation/testplans'\r\n          },\r\n          {\r\n            id:'sb_s_01_03',\r\n            name: 'Report',\r\n            link: '/cerberus/documentation/report'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id:'sb_m_02',\r\n        icon: 'fas fa-vial',\r\n        main: 'Tools',\r\n        subs: [\r\n          {\r\n            id:'sb_s_02_01',\r\n            name: 'Overview',\r\n            link: '/cerberus/testmanager/overview'\r\n          },\r\n          {\r\n            id:'sb_s_02_02',\r\n            name: 'Test set',\r\n            link: '/cerberus/testsets'\r\n          },\r\n          {\r\n            id:'sb_s_02_03',\r\n            name: 'Template',\r\n            link: '/cerberus/testmanager/tmp'\r\n          },\r\n          {\r\n            id:'sb_s_02_04',\r\n            name: 'Execution',\r\n            link: '/cerberus/testmanager/execution'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id:'sb_m_03',\r\n        icon: 'far fa-smile',\r\n        main: 'User',\r\n        subs: [\r\n          {\r\n            id:'sb_s_03_01',\r\n            name: 'Role',\r\n            link: '/cerberus/user/roles'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"homeCerberus\">\r\n      <Topnav username={props.activeUser}></Topnav>\r\n      <Sidebar logo={data.sidebar_logo} items={data.sidebar_items}/>\r\n      {\r\n        <Switch>\r\n          <Route path={`${match.path}/`}>\r\n            {\r\n              <Dashboard user={props.activeUser} project={props.activeProject} changeProj={props.changeProject}></Dashboard>\r\n            }\r\n          </Route>\r\n          <Route path={`${match.path}/testsets`}>\r\n            {\r\n              <Testsets sets={props.testsets}></Testsets>  \r\n            }\r\n          </Route>\r\n          <Route path={`${match.path}/hello`}>\r\n            {\r\n              <h1>Hello</h1>\r\n            }\r\n          </Route>\r\n        </Switch>\r\n      }\r\n  </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.isAuthenticated,\r\n    activeUser: state.activeUser,\r\n    activeProject: state.activeProject,\r\n    testsets: state.Testsets\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeProject: (name) => dispatch({type: 'CER_PROJ_CHANGE',value: name}),\r\n    logOut: () => dispatch({type: 'CER_LOGOUT'})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeCerberus);\r\n"]},"metadata":{},"sourceType":"module"}