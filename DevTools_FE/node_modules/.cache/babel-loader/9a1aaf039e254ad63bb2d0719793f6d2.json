{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\Cerberus.js\";\nimport React from 'react';\nimport LoginCerberus from './login';\nimport HomeCerberus from './home';\nimport { Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst Cerberus = () => {\n  let match = useRouteMatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loggedIn = _useState2[0],\n        setLoggedIn = _useState2[1];\n\n  const auth = {\n    isAuthenticated: false,\n\n    authenticate(cb) {\n      auth.isAuthenticated = true;\n      setTimeout(cb, 100);\n    },\n\n    signout(cb) {\n      auth.isAuthenticated = false;\n      setTimeout(cb, 100);\n    }\n\n  };\n\n  const protectedRoute = (_ref) => {\n    let children = _ref.children,\n        rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return React.createElement(Route, Object.assign({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), auth.isAuthenticated ? children : React.createElement(Redirect, {\n      to: `${match.url}/login`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  };\n\n  const authSuccess = event => {\n    setLoggedIn(true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${match.path}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, auth.isAuthenticated ? React.createElement(Redirect, {\n    to: `${match.url}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : React.createElement(LoginCerberus, {\n    success: authSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/`,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, auth.isAuthenticated ? React.createElement(HomeCerberus, {\n    auth: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(Redirect, {\n    to: `${match.url}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n};\n\nexport default Cerberus;","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/Cerberus.js"],"names":["React","LoginCerberus","HomeCerberus","Route","useRouteMatch","Switch","Redirect","useState","Cerberus","match","loggedIn","setLoggedIn","auth","isAuthenticated","authenticate","cb","setTimeout","signout","protectedRoute","children","rest","url","authSuccess","event","path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,QAAQ,GAAG,MAAK;AACpB,MAAIC,KAAK,GAAGL,aAAa,EAAzB;;AADoB,oBAEWG,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,QAEbG,QAFa;AAAA,QAEJC,WAFI;;AAGpB,QAAMC,IAAI,GAAG;AACXC,IAAAA,eAAe,EAAE,KADN;;AAEXC,IAAAA,YAAY,CAACC,EAAD,EAAI;AACdH,MAAAA,IAAI,CAACC,eAAL,GAAuB,IAAvB;AACAG,MAAAA,UAAU,CAACD,EAAD,EAAI,GAAJ,CAAV;AACD,KALU;;AAMXE,IAAAA,OAAO,CAACF,EAAD,EAAI;AACTH,MAAAA,IAAI,CAACC,eAAL,GAAuB,KAAvB;AACAG,MAAAA,UAAU,CAACD,EAAD,EAAI,GAAJ,CAAV;AACD;;AATU,GAAb;;AAWA,QAAMG,cAAc,GAAG,UAAyB;AAAA,QAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,QAAVC,IAAU;;AAC9C,WACE,oBAAC,KAAD,oBAAWA,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEIR,IAAI,CAACC,eAAL,GACCM,QADD,GACc,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAG,GAAEV,KAAK,CAACY,GAAI,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHlB,CADF;AAQD,GATD;;AAUA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3BZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACe,IAAK,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,IAAI,CAACC,eAAL,GAAuB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEJ,KAAK,CAACY,GAAI,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,GAA0D,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9D,CADF,EAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEb,KAAK,CAACe,IAAK,GAA3B;AAA+B,IAAA,KAAK,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,IAAI,CAACC,eAAL,GAAuB,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,GAAoE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEH,KAAK,CAACY,GAAI,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxE,CANF,CADF,CADF;AAgBD,CA3CD;;AA6CA,eAAeb,QAAf","sourcesContent":["import React from 'react';\r\nimport LoginCerberus from './login';\r\nimport HomeCerberus from './home';\r\nimport { Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Cerberus = () =>{  \r\n  let match = useRouteMatch();\r\n  const [loggedIn,setLoggedIn] = useState(false);\r\n  const auth = {\r\n    isAuthenticated: false,\r\n    authenticate(cb){\r\n      auth.isAuthenticated = true;\r\n      setTimeout(cb,100);\r\n    },\r\n    signout(cb){\r\n      auth.isAuthenticated = false;\r\n      setTimeout(cb,100);\r\n    }\r\n  }\r\n  const protectedRoute = ({children, ...rest}) => {\r\n    return (\r\n      <Route {...rest}>\r\n        {\r\n          auth.isAuthenticated ? \r\n          (children) : (<Redirect to={`${match.url}/login`}/>)\r\n        }\r\n      </Route>\r\n    );\r\n  }\r\n  const authSuccess = event => {\r\n    setLoggedIn(true);\r\n  } \r\n  return (\r\n    <div className=\"Cerberus\">\r\n      <Switch>\r\n        <Route path={`${match.path}/login`}>\r\n          {\r\n            auth.isAuthenticated ? <Redirect to={`${match.url}/`} />: <LoginCerberus success={authSuccess}></LoginCerberus>\r\n          }\r\n        </Route>\r\n        <Route path={`${match.path}/`} exact >\r\n          {\r\n            auth.isAuthenticated ? <HomeCerberus auth={auth}></HomeCerberus> :  <Redirect to={`${match.url}/login`}/>\r\n          }\r\n        </Route>\r\n      </Switch>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Cerberus;\r\n"]},"metadata":{},"sourceType":"module"}