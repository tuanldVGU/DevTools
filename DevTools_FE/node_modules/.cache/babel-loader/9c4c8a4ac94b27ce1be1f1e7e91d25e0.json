{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\Cerberus.js\";\nimport React from 'react';\nimport LoginCerberus from './auth/login';\nimport HomeCerberus from './pages/index';\nimport { Route, useRouteMatch, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Sidebar from '../../shared/sidebar';\nimport Topnav from '../../shared/topnav';\n\nconst Cerberus = props => {\n  let match = useRouteMatch();\n\n  const ProtectedRoute = (_ref) => {\n    let children = _ref.children,\n        rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: () => props.isAuthenticated ? children : React.createElement(Redirect, {\n        to: '/cerberus/login',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${match.path}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.isAuthenticated ? React.createElement(Redirect, {\n    to: `${match.url}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(LoginCerberus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), props.isAuthenticated === true ? React.createElement(Topnav, {\n    username: props.activeUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : null, props.isAuthenticated === true ? React.createElement(Sidebar, {\n    logo: data.sidebar_logo,\n    items: data.sidebar_items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : null, React.createElement(ProtectedRoute, {\n    path: `${match.path}/`,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(HomeCerberus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: () => dispatch({\n      type: 'CER_LOGIN'\n    }),\n    logOut: () => dispatch({\n      type: 'CER_LOGOUT'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cerberus);","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/Cerberus.js"],"names":["React","LoginCerberus","HomeCerberus","Route","useRouteMatch","Switch","Redirect","connect","Sidebar","Topnav","Cerberus","props","match","ProtectedRoute","children","rest","isAuthenticated","path","url","activeUser","data","sidebar_logo","sidebar_items","mapStateToProps","state","mapDispatchToProps","dispatch","logIn","type","logOut"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAsD,kBAAtD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAG;AAEvB,MAAIC,KAAK,GAAGR,aAAa,EAAzB;;AAEA,QAAMS,cAAc,GAAG,UAAyB;AAAA,QAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,QAAVC,IAAU;;AAC9C,WACE,oBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAE,MACNJ,KAAK,CAACK,eAAN,GAAyBF,QAAzB,GACC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD,GAVD;;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACK,IAAK,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,KAAK,CAACK,eAAN,GAAwB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAEJ,KAAK,CAACM,GAAI,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,GAA2D,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF/D,CADF,EAOIP,KAAK,CAACK,eAAN,KAA0B,IAA1B,GACA,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEL,KAAK,CAACQ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAC+C,IARnD,EAWIR,KAAK,CAACK,eAAN,KAA0B,IAA1B,GACA,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEI,IAAI,CAACC,YAApB;AAAkC,IAAA,KAAK,EAAED,IAAI,CAACE,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GACyE,IAZ7E,EAcE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAG,GAAEV,KAAK,CAACK,IAAK,GAApC;AAAwC,IAAA,KAAK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,CADF,CADF;AAuBD,CAvCD;;AAyCA,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,eAAe,EAAEQ,KAAK,CAACR;AADlB,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAE,MAAMD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD,CADhB;AAELC,IAAAA,MAAM,EAAE,MAAMH,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD;AAFjB,GAAP;AAID,CALD;;AAMA,eAAerB,OAAO,CAACgB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4Cf,QAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport LoginCerberus from './auth/login';\r\nimport HomeCerberus from './pages/index';\r\nimport { Route, useRouteMatch, Switch, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Sidebar from '../../shared/sidebar';\r\nimport Topnav from '../../shared/topnav';\r\n\r\nconst Cerberus = props =>{  \r\n\r\n  let match = useRouteMatch();\r\n\r\n  const ProtectedRoute = ({children, ...rest}) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          props.isAuthenticated ? (children) : \r\n          (<Redirect to={'/cerberus/login'}/>)\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Cerberus\">\r\n      <Switch>\r\n        <Route path={`${match.path}/login`}>\r\n          {\r\n            props.isAuthenticated ? <Redirect to={`${match.url}/`}/> : <LoginCerberus></LoginCerberus>\r\n          }\r\n        </Route>\r\n        {\r\n          props.isAuthenticated === true ?     \r\n          <Topnav username={props.activeUser}></Topnav>: null\r\n        }\r\n        {\r\n          props.isAuthenticated === true ?     \r\n          <Sidebar logo={data.sidebar_logo} items={data.sidebar_items}></Sidebar>: null\r\n        }\r\n        <ProtectedRoute path={`${match.path}/`} exact>\r\n          <HomeCerberus></HomeCerberus>\r\n        </ProtectedRoute>\r\n\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.isAuthenticated\r\n  };\r\n} \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: () => dispatch({type: 'CER_LOGIN'}),\r\n    logOut: () => dispatch({type: 'CER_LOGOUT'})\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cerberus);\r\n"]},"metadata":{},"sourceType":"module"}