{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\pages\\\\home.js\";\nimport React from 'react';\nimport Sidebar from '../../shared/sidebar';\nimport Topnav from '../../shared/topnav';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst HomeCerberus = props => {\n  let data = {\n    sidebar_logo: {\n      svg: '/logo/Cerberus_logo.svg',\n      name: 'cerberus'\n    },\n    sidebar_items: [{\n      id: 'sb_m_01',\n      icon: 'fas fa-file-alt',\n      main: 'Documentation',\n      subs: [{\n        id: 'sb_s_01_01',\n        name: 'Requirement',\n        link: '/cerberus/documentation/requirements'\n      }, {\n        id: 'sb_s_01_02',\n        name: 'Test Plan',\n        link: '/cerberus/documentation/testplans'\n      }, {\n        id: 'sb_s_01_03',\n        name: 'Report',\n        link: '/cerberus/documentation/report'\n      }]\n    }, {\n      id: 'sb_m_02',\n      icon: 'fas fa-vial',\n      main: 'Tools',\n      subs: [{\n        id: 'sb_s_02_01',\n        name: 'Overview',\n        link: '/cerberus/testmanager/overview'\n      }, {\n        id: 'sb_s_02_02',\n        name: 'Test set',\n        link: '/cerberus/testmanager/testset'\n      }, {\n        id: 'sb_s_02_03',\n        name: 'Template',\n        link: '/cerberus/testmanager/tmp'\n      }, {\n        id: 'sb_s_02_04',\n        name: 'Execution',\n        link: '/cerberus/testmanager/execution'\n      }]\n    }, {\n      id: 'sb_m_03',\n      icon: 'far fa-smile',\n      main: 'User',\n      subs: [{\n        id: 'sb_s_03_01',\n        name: 'Role',\n        link: '/cerberus/user/roles'\n      }]\n    }]\n  };\n  let appRoot = \"/cerberus/\";\n  return React.createElement(\"div\", {\n    className: \"homeCerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Topnav, {\n    username: \"Tester\",\n    logout: props.logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    logo: data.sidebar_logo,\n    items: data.sidebar_items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: appRoot,\n    component: Dashboard,\n    props: props.cerberusUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nconst Dashboard = props => {\n  return React.createElement(\"div\", {\n    className: \"appContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"hero is-primary is-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"hero-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Hello, \", props.activeUser))), React.createElement(\"div\", {\n    className: \"project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tile is-ancestor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tile is-parent is-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"PROJECT\"), React.createElement(\"h2\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.activeProject)))), React.createElement(\"div\", {\n    className: \"info-tiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tile is-ancestor has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \" 100k \"), React.createElement(\"p\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \" Test plans \"))), React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \" 100k \"), React.createElement(\"p\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" Test sets \"))), React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \" 100k \"), React.createElement(\"p\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" Tests \"))), React.createElement(\"div\", {\n    className: \"tile is-parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"tile is-child box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" 100k \"), React.createElement(\"p\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \" Features \"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    activeUser: state.activeUser,\n    activeProject: state.activeProject\n  };\n};\n\nexport default connect(mapStateToProps)(HomeCerberus);","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/pages/home.js"],"names":["React","Sidebar","Topnav","Route","Switch","connect","HomeCerberus","props","data","sidebar_logo","svg","name","sidebar_items","id","icon","main","subs","link","appRoot","logout","Dashboard","cerberusUser","activeUser","activeProject","mapStateToProps","state","isAuthenticated"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Sidebar from '../../shared/sidebar';\r\nimport Topnav from '../../shared/topnav';\r\nimport { Route, Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst HomeCerberus = (props) => {\r\n  let data = {\r\n    sidebar_logo: {\r\n      svg: '/logo/Cerberus_logo.svg',\r\n      name: 'cerberus'\r\n    },\r\n    sidebar_items: [\r\n      {\r\n        id:'sb_m_01',\r\n        icon: 'fas fa-file-alt',\r\n        main: 'Documentation',\r\n        subs: [\r\n          {\r\n            id:'sb_s_01_01',\r\n            name: 'Requirement',\r\n            link: '/cerberus/documentation/requirements'\r\n          },\r\n          {\r\n            id:'sb_s_01_02',\r\n            name: 'Test Plan',\r\n            link: '/cerberus/documentation/testplans'\r\n          },\r\n          {\r\n            id:'sb_s_01_03',\r\n            name: 'Report',\r\n            link: '/cerberus/documentation/report'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id:'sb_m_02',\r\n        icon: 'fas fa-vial',\r\n        main: 'Tools',\r\n        subs: [\r\n          {\r\n            id:'sb_s_02_01',\r\n            name: 'Overview',\r\n            link: '/cerberus/testmanager/overview'\r\n          },\r\n          {\r\n            id:'sb_s_02_02',\r\n            name: 'Test set',\r\n            link: '/cerberus/testmanager/testset'\r\n          },\r\n          {\r\n            id:'sb_s_02_03',\r\n            name: 'Template',\r\n            link: '/cerberus/testmanager/tmp'\r\n          },\r\n          {\r\n            id:'sb_s_02_04',\r\n            name: 'Execution',\r\n            link: '/cerberus/testmanager/execution'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id:'sb_m_03',\r\n        icon: 'far fa-smile',\r\n        main: 'User',\r\n        subs: [\r\n          {\r\n            id:'sb_s_03_01',\r\n            name: 'Role',\r\n            link: '/cerberus/user/roles'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n  let appRoot = \"/cerberus/\"\r\n  return (\r\n    <div className=\"homeCerberus\">\r\n      <Topnav username={\"Tester\"} logout={props.logout}></Topnav>\r\n      <Sidebar logo={data.sidebar_logo} items={data.sidebar_items}/>\r\n      <Switch>\r\n        <Route path={appRoot} component={Dashboard} props={props.cerberusUser}></Route>\r\n      </Switch>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Dashboard = props => {\r\n  return (\r\n    <div className=\"appContent\">\r\n      <div className=\"hero is-primary is-bold\">\r\n        <div className=\"hero-body\">\r\n          <h1 className=\"title\">Hello, {props.activeUser}</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"project\">\r\n        <div className=\"tile is-ancestor\">\r\n          <div className=\"tile is-parent is-8\">\r\n            <h1 className=\"title\">PROJECT</h1>\r\n            <h2 className=\"subtitle\">{props.activeProject}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"info-tiles\">\r\n        <div className=\"tile is-ancestor has-text-centered\">\r\n          <div className=\"tile is-parent\">\r\n            <article className=\"tile is-child box\">\r\n              <p className=\"title\"> 100k </p>\r\n              <p className=\"subtitle\"> Test plans </p>\r\n            </article>\r\n          </div>\r\n          <div className=\"tile is-parent\">\r\n            <article className=\"tile is-child box\">\r\n              <p className=\"title\"> 100k </p>\r\n              <p className=\"subtitle\"> Test sets </p>\r\n            </article>\r\n          </div>\r\n          <div className=\"tile is-parent\">\r\n            <article className=\"tile is-child box\">\r\n              <p className=\"title\"> 100k </p>\r\n              <p className=\"subtitle\"> Tests </p>\r\n            </article>\r\n          </div>\r\n          <div className=\"tile is-parent\">\r\n            <article className=\"tile is-child box\">\r\n              <p className=\"title\"> 100k </p>\r\n              <p className=\"subtitle\"> Features </p>\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.isAuthenticated,\r\n    activeUser: state.activeUser,\r\n    activeProject: state.activeProject\r\n  };\r\n} \r\nexport default connect(mapStateToProps)(HomeCerberus);\r\n"]},"metadata":{},"sourceType":"module"}