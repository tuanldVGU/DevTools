{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\pages\\\\index.js\";\nimport React from 'react';\nimport Sidebar from '../../shared/sidebar';\nimport Topnav from '../../shared/topnav';\nimport Dashboard from './dashboard';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst HomeCerberus = props => {\n  const ProtectedRoute = (_ref) => {\n    let children = _ref.children,\n        rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: () => props.isAuthenticated ? children : React.createElement(Redirect, {\n        to: '/cerberus/login',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"homeCerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Topnav, {\n    username: props.activeUser,\n    logout: props.logOut(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    logo: data.sidebar_logo,\n    items: data.sidebar_items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ProtectedRoute, {\n    path: `${props.appRoot}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    user: props.activeUser,\n    project: props.activeProject,\n    changeProj: props.changeProject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(ProtectedRoute, {\n    path: `${props.appRoot}/testsets`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    activeUser: state.activeUser,\n    activeProject: state.activeProject,\n    Testsets: state.Testsets\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeProject: name => dispatch({\n      type: 'CER_PROJ_CHANGE',\n      value: name\n    }),\n    logOut: () => dispatch({\n      type: 'CER_LOGOUT'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeCerberus);","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/pages/index.js"],"names":["React","Sidebar","Topnav","Dashboard","Route","Switch","Redirect","connect","HomeCerberus","props","ProtectedRoute","children","rest","isAuthenticated","activeUser","logOut","data","sidebar_logo","sidebar_items","appRoot","activeProject","changeProject","mapStateToProps","state","Testsets","mapDispatchToProps","dispatch","name","type","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAuC,kBAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE9B,QAAMC,cAAc,GAAG,UAAyB;AAAA,QAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,QAAVC,IAAU;;AAC9C,WACE,oBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAE,MACNH,KAAK,CAACI,eAAN,GAAyBF,QAAzB,GACC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD,GAVD;;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEF,KAAK,CAACK,UAAxB;AAAoC,IAAA,MAAM,EAAEL,KAAK,CAACM,MAAN,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEC,IAAI,CAACC,YAApB;AAAkC,IAAA,KAAK,EAAED,IAAI,CAACE,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAG,GAAET,KAAK,CAACU,OAAQ,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,SAAD;AAAY,IAAA,IAAI,EAAEV,KAAK,CAACK,UAAxB;AAAoC,IAAA,OAAO,EAAEL,KAAK,CAACW,aAAnD;AAAkE,IAAA,UAAU,EAAEX,KAAK,CAACY,aAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,EAME,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAG,GAAEZ,KAAK,CAACU,OAAQ,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF,CADF;AAgBD,CA9BD;;AAgCA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,eAAe,EAAEU,KAAK,CAACV,eADlB;AAELC,IAAAA,UAAU,EAAES,KAAK,CAACT,UAFb;AAGLM,IAAAA,aAAa,EAAEG,KAAK,CAACH,aAHhB;AAILI,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAJX,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLL,IAAAA,aAAa,EAAGM,IAAD,IAAUD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,iBAAP;AAAyBC,MAAAA,KAAK,EAAEF;AAAhC,KAAD,CAD5B;AAELZ,IAAAA,MAAM,EAAE,MAAMW,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD;AAFjB,GAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CAACe,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CjB,YAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport Sidebar from '../../shared/sidebar';\r\nimport Topnav from '../../shared/topnav';\r\nimport Dashboard from './dashboard';\r\nimport { Route, Switch, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst HomeCerberus = (props) => {\r\n\r\n  const ProtectedRoute = ({children, ...rest}) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          props.isAuthenticated ? (children) : \r\n          (<Redirect to={'/cerberus/login'}/>)\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"homeCerberus\">\r\n      <Topnav username={props.activeUser} logout={props.logOut()}></Topnav>\r\n      <Sidebar logo={data.sidebar_logo} items={data.sidebar_items}/>\r\n      <Switch>\r\n        <ProtectedRoute path={`${props.appRoot}`}>\r\n          {\r\n            <Dashboard  user={props.activeUser} project={props.activeProject} changeProj={props.changeProject}></Dashboard>\r\n          }\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path={`${props.appRoot}/testsets`}>\r\n\r\n        </ProtectedRoute>\r\n      </Switch>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.isAuthenticated,\r\n    activeUser: state.activeUser,\r\n    activeProject: state.activeProject,\r\n    Testsets: state.Testsets\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeProject: (name) => dispatch({type: 'CER_PROJ_CHANGE',value: name}),\r\n    logOut: () => dispatch({type: 'CER_LOGOUT'})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeCerberus);\r\n"]},"metadata":{},"sourceType":"module"}