{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\pages\\\\Testsets.js\";\nimport React from 'react';\n\nconst Testsets = props => {\n  let selected = 0;\n\n  const setDetail = pos => {\n    selected = pos;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"appContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"columns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column is-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-header-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Testsets\")), React.createElement(\"div\", {\n    className: \"card-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table is-fullwidth is-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.sets.map((testset, i) => {\n    return React.createElement(\"tr\", {\n      className: \"dataList\",\n      key: testset.id,\n      onClick: setDetail(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-object-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, testset.name), React.createElement(\"td\", {\n      className: \"level-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"button is-primary is-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, testset.feature)));\n  }))))), React.createElement(\"footer\", {\n    className: \"card-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"column is-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-header-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Detail: \")), React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"icon is-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-3x fa-object-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title is-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.sets[selected].name), React.createElement(\"p\", {\n    className: \"subtitle is-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"@\", props.sets[selected].author)))), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.sets[selected].desc)))))));\n};\n\nexport default Testsets;","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/pages/Testsets.js"],"names":["React","Testsets","props","selected","setDetail","pos","sets","map","testset","i","id","name","feature","author","desc"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst Testsets = props => {\r\n  let selected = 0;\r\n  const setDetail = pos =>{\r\n    selected = pos;\r\n  }\r\n  return(\r\n    <div className=\"appContent\">\r\n      <div className=\"columns\">\r\n        <div className=\"column is-3\">\r\n          <div className=\"card\">\r\n            <header className=\"card-header\">\r\n              <p className=\"card-header-title\">Testsets</p>\r\n            </header>\r\n            <div className=\"card-table\">\r\n              <div className=\"content\">\r\n                <table className=\"table is-fullwidth is-striped\">\r\n                  <tbody>\r\n                    {\r\n                      props.sets.map((testset,i) => {\r\n                        return (\r\n                          <tr className=\"dataList\" key={testset.id} onClick={setDetail(i)}>\r\n                            <td><i className=\"fas fa-object-group\"></i></td>\r\n                            <td>{testset.name}</td>\r\n                            <td className=\"level-right\"><p className=\"button is-primary is-small\">{testset.feature}</p></td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <footer className=\"card-footer\"></footer>\r\n          </div>\r\n        </div>\r\n        <div className=\"column is-9\">\r\n          <div className=\"card\">\r\n            <header className=\"card-header\">\r\n              <p className=\"card-header-title\">Detail: </p>\r\n            </header>\r\n            <div className=\"card-content\">\r\n              <div className=\"media\">\r\n                <div className=\"media-left\"><span className=\"icon is-large\"><i className=\"fas fa-3x fa-object-group\"></i></span></div>\r\n                <div className=\"media-content\">\r\n                  <p className=\"title is-4\">{props.sets[selected].name}</p>\r\n                  <p className=\"subtitle is-6\">@{props.sets[selected].author}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"content\">\r\n              <div className=\"description\">\r\n                <p>{props.sets[selected].desc}</p>\r\n              </div>\r\n              {/* <div className=\"panel\">\r\n                <p className=\"panel-heading\">\r\n                  Testcases\r\n                </p>\r\n                <div className=\"panel-block\">\r\n                  <p className=\"control has-icons-left\">\r\n                    <input className=\"input\" type=\"text\" placeholder=\"Search\"/>\r\n                    <span className=\"icon is-left\">\r\n                      <i className=\"fas fa-search\"></i>\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n                {\r\n                  props.sets[selected].testcases.map(testcase => {\r\n                    return (\r\n                      <div className=\"panel-block\" key={testcase.id}>\r\n                        <span className=\"panel-icon\">\r\n                          <i className=\"fas fa-book\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                        <span>{testcase.name}</span>\r\n                       </div>\r\n                    );\r\n                  })\r\n                }\r\n                <div className=\"panel-block\">\r\n                  <button className=\"button is-link is-outlined is-fullwidth\">\r\n                    Reset all filters\r\n                  </button>\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Testsets;"]},"metadata":{},"sourceType":"module"}