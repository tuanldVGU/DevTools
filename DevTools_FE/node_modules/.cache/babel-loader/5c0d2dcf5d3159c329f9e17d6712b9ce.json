{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\workspace\\\\DevTools\\\\DevTools_FE\\\\src\\\\components\\\\cerberus\\\\Cerberus.js\";\nimport React from 'react';\nimport LoginCerberus from './login';\nimport HomeCerberus from './home';\nimport { Route, useRouteMatch, Switch, Redirect, useHistory, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst Cerberus = () => {\n  let match = useRouteMatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        logIn = _useState2[0],\n        setlogIn = _useState2[1];\n\n  const auth = {\n    isAuthenticated: false,\n    user: \"\",\n\n    authenticate(cb) {\n      auth.isAuthenticated = true;\n      setTimeout(cb, 100);\n    },\n\n    signout(cb) {\n      auth.isAuthenticated = false;\n      setTimeout(cb, 100);\n    }\n\n  };\n\n  const ProtectedRoute = (_ref) => {\n    let children = _ref.children,\n        rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: ({\n        location\n      }) => logIn ? children : React.createElement(Redirect, {\n        to: {\n          pathname: `${match.url}/login`,\n          state: {\n            from: location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  };\n\n  const authSuccess = () => {\n    let history = useHistory();\n    let location = useLocation();\n\n    let _ref2 = location.state || {\n      from: {\n        pathname: `${match.url}/`\n      }\n    },\n        from = _ref2.from;\n\n    auth.authenticate(() => {\n      history.replace(from);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Success\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cerberus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: `${match.path}/login`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, auth.isAuthenticated ? React.createElement(Redirect, {\n    to: `${match.url}/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(LoginCerberus, {\n    success: authSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(ProtectedRoute, {\n    path: `${match.path}/`,\n    exact: true,\n    component: HomeCerberus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n};\n\nexport default Cerberus;","map":{"version":3,"sources":["D:/workspace/DevTools/DevTools_FE/src/components/cerberus/Cerberus.js"],"names":["React","LoginCerberus","HomeCerberus","Route","useRouteMatch","Switch","Redirect","useHistory","useLocation","useState","Cerberus","match","logIn","setlogIn","auth","isAuthenticated","user","authenticate","cb","setTimeout","signout","ProtectedRoute","children","rest","location","pathname","url","state","from","authSuccess","history","replace","path"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport LoginCerberus from './login';\r\nimport HomeCerberus from './home';\r\nimport { Route, useRouteMatch, Switch, Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Cerberus = () =>{  \r\n  let match = useRouteMatch();\r\n  const [logIn,setlogIn] = useState(false);\r\n  const auth = {\r\n    isAuthenticated: false,\r\n    user: \"\",\r\n    authenticate(cb){\r\n      auth.isAuthenticated = true;\r\n      setTimeout(cb,100);\r\n    },\r\n    signout(cb){\r\n      auth.isAuthenticated = false;\r\n      setTimeout(cb,100);\r\n    }\r\n  };\r\n\r\n  const ProtectedRoute = ({children, ...rest}) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          logIn ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: `${match.url}/login`,\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  const authSuccess = () => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let {from} = location.state || {from: {pathname: `${match.url}/`}}\r\n    auth.authenticate(()=>{\r\n      history.replace(from);\r\n    });\r\n    return (\r\n      <div>Success</div>\r\n    );\r\n  } \r\n  return (\r\n    <div className=\"Cerberus\">\r\n      <Switch>\r\n        <Route path={`${match.path}/login`}>\r\n          {\r\n            auth.isAuthenticated ? <Redirect to={`${match.url}/`}/> : <LoginCerberus success={authSuccess}></LoginCerberus>\r\n          }\r\n        </Route>\r\n        <ProtectedRoute path={`${match.path}/`} exact component={HomeCerberus}/>\r\n        {/* <Route path={`${match.path}/`} exact>\r\n          auth.isAuthenticated ?  <HomeCerberus></HomeCerberus>: <Redirect to={`${match.url}/`}/>\r\n        </Route> */}\r\n      </Switch>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Cerberus;\r\n"]},"metadata":{},"sourceType":"module"}